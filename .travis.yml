language: cpp
compiler:
#- clang
- gcc
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - g++-7
env:
- MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
before_install:
- eval "${MATRIX_EVAL}"
sudo: required
install:
- sudo apt update
- sudo apt build-dep libsfml-dev
- sudo apt install libboost-dev libudev-dev 
#g++-mingw-w64-i686 nsis
#- git clone https://github.com/dlfcn-win32/dlfcn-win32
#- cd dlfcn-win32
#- mkdir build
#- cd build
#- cmake .. -DCMAKE_TOOLCHAIN_FILE=../../cmake_modules/MINGW.cmake -DCMAKE_INSTALL_PREFIX=/usr/i686-w64-mingw32 -DBUILD_SHARED_LIBS=false
#- make -j4
#- sudo make install
#- cd ../..
- git clone https://github.com/pixelherodev/liblib.git
- cd liblib
- mkdir build
- cd build
- cmake ..
- make -j4
- sudo make install
# cd ..
#- mkdir win32
#- cd win32
#- cmake .. -DCMAKE_TOOLCHAIN_FILE=../../cmake_modules/MINGW.cmake -DCMAKE_INSTALL_PREFIX=/usr/i686-w64-mingw32
#- make -j4
#- sudo make install
- cd ../..
- git clone https://github.com/pixelherodev/z80cpp
- cd z80cpp
- git checkout interrupt
- cp ../misc/z80cppCMakeLists.txt CMakeLists.txt
- mkdir build
- cd build
- cmake ..
- make -j4
- sudo make install
#- cd ..
#- mkdir win32
#- cd win32
#- cmake .. -DCMAKE_TOOLCHAIN_FILE=../../cmake_modules/MINGW.cmake -DCMAKE_INSTALL_PREFIX=/usr/i686-w64-mingw32
#- make -j4
#- sudo make install
- cd ../..
- git clone https://github.com/knightos/scas
- cd scas
- mkdir build
- cd build
- cmake ..
- make -j4
- sudo make install
- cd ../..
- git clone https://github.com/knightos/kcc
- cd kcc
- mkdir build
- cd build
- cmake ..
- make -j4
- sudo make install
- cd ../..
- git clone https://github.com/sfml/sfml
- cd sfml
- mkdir build
- cd build
- cmake ..
- make -j4
- sudo make install
#- cd ..
#- mkdir build-win32
#- cd build-win32
#- cmake .. -DCMAKE_TOOLCHAIN_FILE=../../cmake_modules/MINGW.cmake -DCMAKE_INSTALL_PREFIX=/usr/i686-w64-mingw32 -DOPENAL_LIBRARY="`readlink -f ../extlibs/libs-mingw/x64/libopenal32.a`" -DOPENAL_INCLUDE_DIR="`readlink -f ../extlibs/headers/AL`" -DFLAC_LIBRARY="`readlink -f ../extlibs/libs-mingw/x64/libFLAC.a`"  -DFLAC_INCLUDE_DIR="`readlink -f ../extlibs/headers`" -DVORBIS_LIBRARY="`readlink -f ../extlibs/libs-mingw/x64/libvorbis.a`" -DVORBISENC_LIBRARY="`readlink -f ../extlibs/libs-mingw/x64/libvorbisenc.a`" -DVORBISFILE_LIBRARY="`readlink -f ../extlibs/libs-mingw/x64/libvorbisfile.a`" -DOGG_LIBRARY="`readlink -f ../extlibs/libs-mingw/x64/libogg.a`" -DOGG_INCLUDE_DIR="`readlink -f ../extlibs/headers`" -DVORBIS_INCLUDE_DIR="`readlink -f ../extlibs/headers`" -DOGG_INCLUDE_DIR="`readlink -f ../extlibs/headers`" -DVORBIS_INCLUDE_DIR="`readlink -f ../extlibs/headers`" -DFREETYPE_LIBRARY="`readlink -f ../extlibs/libs-mingw/x64/libfreetype.a`" -DFREETYPE_INCLUDE_DIR_ft2build="`readlink -f ../extlibs/headers/freetype2`" -DFREETYPE_INCLUDE_DIR_freetype2="`readlink -f ../extlibs/headers/freetype2`" -DSFML_USE_STATIC_STD_LIBS=true -DBUILD_SHARED_LIBS=false -DCMAKE_C_FLAGS="-I`readlink -f ../../misc/win32`" -DCMAKE_CXX_FLAGS="-I`readlink -f ../../misc/win32`"
#- make -j4
#- sudo make install
- cd ../..
script:
- mkdir build
- cd build
- cmake ..
- make -kj4
- cpack
- cd ..
#- mkdir buildwin32
#- cd buildwin32
#- cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake_modules/MINGW.cmake -DCMAKE_INSTALL_PREFIX=/usr/i686-w64-mingw32 -DLIBGCC_LIBRARY="`readlink -f ../misc/libgcc_s_sjlj-1.dll`" -DLIBSTDCPLUSPLUS_LIBRARY="`readlink -f ../misc/libstdc++-6.dll`" -DSFML_STATIC_LIBRARIES=true 
#- cp ../build/BIOSMerge .
#- make -kj4
#- cpack
#- cd ..
before_deploy:
# Set up git user name and tag this commit
- git config --local user.name "Noam Preil"
- git config --local user.email "pleasantatk@gmail.com"
- git tag "$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)"
deploy:
  provider: releases
  api_key:
    secure: JeF9NCSedvS5ZboGKlsOIjTVmECaztBku4gD4Z6ElnbU1kVYbjJlbApdehbmhT64eKRSy3W0I7DjyD8ygNFAebAePQAa4HfA47ijtKvAkZ7cetfvk24/kDc774sTvx5k97i9FX4q6h1pDq8HZz4yNjwfckDBvTUsVhXGpJZiC1TIdb7zLCMnqI927T3AXkmQoUjr3Ld9djMH95VnDjx5mSu+g2UxXUWZa3Fb0HjXliRhef82Rq/7nyAZfjiOsdxxSFV2u82GjRdCsdhbMdjKOitIA9vTL60V32CxoN+Un7q0G94isJrdK3Pr1OhFDU38uxh4Q6n4Bw5yZZipNDiiq7aVSfhI6r84Hj+dpqQdCqJw/BX42+yKQPrf8OHEUed/fzjXiJl5mwJ0eQf7rNnlTzWf9vgJX2sQesev6SI4Olxsd86qrBFA7XQt2jdBjx+wEqLeqxWpS3l/mi5ppP85JTmeL7gr6hL1OpQfUeIJLEwk8vDS5cPuYnnFJb16B8hi+kVf2t1u52LWB1SX6Aw1j9qxz1xG1r/9ybRpEmfLvk1k5vw6DMY/XrTgFgbrYfeWtnOcBrHmVLWhOT2RSqkfSkvjO0s/Qj+zXm0MjO5BN7+Jl0aHRe56jPCWGw6noCnk0hggRs/U8Ykel+fhoQP3uzUIRt6zPAfjkwBuLNIcrmc=
  file_glob: true
  file:
  - build/Zany80*
 # - buildwin32/Zany80*
  skip_cleanup: true
  on:
    repo: Zany80/Zany80
branches:
  only:
  - master
  - lua
